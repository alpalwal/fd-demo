version: '3'
services:

  rabbit:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    expose:
      - 15682
      - 5672
    networks:
      - fd-demo

  kibana:
    image: kibana:5
    ports:
      - 5601:5601
    networks:
      - fd-demo

    environment:
      ELASTICSEARCH_URL: 'http://elasticsearch:9200'
    depends_on:
      - elasticsearch

  elasticsearch:
    image: elasticsearch:5.5
    command: "elasticsearch -E cluster.name=flockdata -E node.master=true -E discovery.type=single-node -E network.host=0.0.0.0 -E http.host=0.0.0.0"
    ports:
      - '9200:9200'
      - '9300:9300'
    volumes:
      - fd-es:/usr/share/elasticsearch/data
    expose:
      - 9200
      - 9300
    networks:
      - fd-demo

  fd-client:
    container_name: fdemo-client
    image: flockdata/fd-client:0.98.9
    # docker-compose run fd-client fdregister -u=demo:123 -l=demo
    # docker-compose run fd-client fdcountries -u=demo:123
    environment:
      org.fd.engine.api: 'http://fd-engine:8091'
      org.fd.client.batchsize: 1
      org.fd.client.http.user: demo
      org.fd.client.http.pass: 123
      spring.rabbitmq.host: rabbit

    networks:
      - fd-demo

  fd-engine:
    image: flockdata/fd-engine:0.98.9

    ports:
      - '8091:8091'
      - '7474:7474'
      - '61000:61000'
    expose:
      - 8091
      - 7474
      - 61000

    volumes:
      - fd-neo:/opt/flockdata/data

    networks:
      - fd-demo

    ulimits:
      nofile:
        soft: 40000
        hard: 40000

    depends_on:
      - rabbit

    environment:
#      _JAVA_OPTIONS: "-Xmx2g -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=61000"
      _JAVA_OPTIONS: "-Xmx2g"
      server.port: 8091
      spring.profiles.active: fd-server,fd-auth-test,discovery
      org.fd.discovery.url: http://eureka:8761/eureka/
      org.fd.auth.simple.users.demo.pass: 123
      org.fd.auth.simple.users.demo.roles: FD_USER;FD_ADMIN
      spring.rabbitmq.host: rabbit
      spring.rabbitmq.port: 5672
      org.fd.search.api: http://fd-search:8092
      org.fd.store.api: http://fd-store:8093
      org.neo4j.path: /opt/flockdata
      org.neo4j.server.database.location: /opt/flockdata/data
      org.fd.engine.fortress.store: 'true'
      cors.allowOrigin:  http://192.168.99.103,http://docker-ip,http://localhost:9000,http://127.0.0.1:9000,http://192.168.99.100,chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop

    links:
      - rabbit
      - eureka

  fd-search:
    image: flockdata/fd-search:0.98.9
    ports:
     - '8092:8092'
    expose:
      - 8092
    networks:
      - fd-demo

    depends_on:
      - elasticsearch
      - rabbit
      - eureka

    ulimits:
      nofile:
        soft: 40000
        hard: 40000

    environment:
      server.port: 8092
      spring.profiles.active: fd-server,fd-no-auth,discovery
      _JAVA_OPTIONS: "-Xmx2g"

      org.fd.discovery.url: http://eureka:8761/eureka/

      spring.rabbitmq.host: rabbit

      org.fd.engine.url: 'http://fd-engine:8091'
      #Is the node going to be a client node which means it will hold no data
      org.fd.search.es.transportOnly: "true"
      # A local node is a node that uses a local (JVM level) discovery and transport
      org.fd.search.es.local: "false"
      # , serparated list of hosts to connect to if transportOnly == true
      es.nodes: elasticsearch:9300
      es.clustername: 'es_flockdata'
      es.path.home: /opt/flockdata
      es.path.data: /opt/flockdata/data

  fd-store:
    image: flockdata/fd-store:0.98.9
    ports:
     - '8093:8093'

    expose:
      - 8093
    networks:
      - fd-demo

    depends_on:
      - rabbit
      - eureka
      - riak

    environment:
      _JAVA_OPTIONS: "-Xmx1g"
      spring.profiles.active: fd-server,fd-no-auth,discovery,riak
      server.port: 8093
      spring.rabbitmq.host: rabbit

      org.fd.discovery.url: http://eureka:8761/eureka/
      riak.hosts: riak
      es.clustername: 'es_flockdata'

  fd-view:
      container_name: fdemo-view
      image: flockdata/fd-view
      ports:
        - '80:80'

      networks:
        - fd-demo

      environment:
        ENGINE_URL: 'http://fd-engine:8091'

# Monitoring tools
  eureka:
    image: flockdata/fd-discovery:0.98.3
    ports:
      - '8761:8761'
    expose:
      - 8761
    networks:
      - fd-demo

    environment:
      eureka.server.enable-self-preservation: 'true'

  riak:
    image: lapax/riak:latest
    ports:
      - '8087:8087'
      - '8098:8098'
    expose:
      - 8098
    environment:
      storage_backend: leveldb
      platform_data_dir: /data/riak

    volumes:
      - riak:/data/riak
    networks:
      - fd-demo

  scope:
    image: weaveworks/scope
    container_name: fdemo-weavescope
    volumes:
      - '/var/run/:/var/run:rw'
    command:
      - '--probe.docker'
      - 'true'
    network_mode: 'host'
    pid: 'host'
    ports:
      - '4040:4040'
    privileged: true

networks:
  fd-demo:

